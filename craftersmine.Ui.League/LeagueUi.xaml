<ResourceDictionary
    x:Class="craftersmine.Ui.League.LeagueUi"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:craftersmine.Ui.League.Controls"
    >

    <FontFamily x:Key="BeaufortForLOL">/craftersmine.Ui.League;component/Fonts/Beaufort/#Beaufort for LoL</FontFamily>
    <FontFamily x:Key="PTSans">/craftersmine.Ui.League;component/Fonts/PTSans/#PT Sans</FontFamily>
    <FontFamily x:Key="SpiegelRegular">/craftersmine.Ui.League;component/Fonts/Spiegel/#Spiegel Regular</FontFamily>
    <FontFamily x:Key="SpiegelSemiBold">/craftersmine.Ui.League;component/Fonts/Spiegel/#Spiegel SemiBold</FontFamily>

    <SolidColorBrush x:Key="LeagueWindowBackground" Color="#010a13"/>

    <LinearGradientBrush x:Key="LeagueUserPictureImageBorderDefault" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#b99c5f" Offset="0"/>
            <GradientStop Color="#664d27" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Color x:Key="LeagueSpinner" R="#0a" G="#c7" B="#b8" A="#ff"/>
    <RadialGradientBrush x:Key="SpinnerAliasingOpacityMask">
        <GradientStop Color="Transparent" Offset="0"/>
        <GradientStop Color="Transparent" Offset="0.67"/>
        <GradientStop Color="White" Offset=".68"/>
        <GradientStop Color="White" Offset=".99"/>
        <GradientStop Color="Transparent" Offset="1"/>
    </RadialGradientBrush>

    <!--#region Status Brushes-->
    <SolidColorBrush x:Key="LeagueStatusBorderOnline" Color="#36d987"/>
    <SolidColorBrush x:Key="LeagueStatusBorderInGame" Color="#0ac4df"/>
    <SolidColorBrush x:Key="LeagueStatusBorderBusy" Color="#b71d36"/>
    <SolidColorBrush x:Key="LeagueStatusBorderOffline" Color="#3b4043"/>
    <SolidColorBrush x:Key="LeagueStatusBackgroundOnline" Color="#1e825a"/>
    <SolidColorBrush x:Key="LeagueStatusBackgroundInGame" Color="#025579"/>
    <SolidColorBrush x:Key="LeagueStatusBackgroundBusy" Color="#400a12"/>
    <SolidColorBrush x:Key="LeagueStatusBackgroundOffline" Color="#0f1a21"/>
    <!--#endregion-->

    <!--#region Button Brushes-->
    <LinearGradientBrush x:Key="LeagueButtonBorderDefault" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#c8aa6d" Offset="0"/>
            <GradientStop Color="#795c28" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueButtonBorderMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#f0e5d6" Offset="0"/>
            <GradientStop Color="#c99f45" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueButtonBorderPressed" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#c8a96c" Offset="0"/>
            <GradientStop Color="#7a5d29" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueButtonBorderDisabled" Color="#5c5b57"/>
    <SolidColorBrush x:Key="LeagueButtonBackgroundDefault" Color="#1e2328"/>
    <LinearGradientBrush x:Key="LeagueButtonBackgroundMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#282c32" Offset="0"/>
            <GradientStop Color="#4c4634" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueButtonTextColorDefault" Color="#cbbc8f"/>
    <SolidColorBrush x:Key="LeagueButtonTextColorMouseOver" Color="#eee4d0"/>
    <SolidColorBrush x:Key="LeagueButtonTextColorPressed" Color="#5c5b57"/>
    <SolidColorBrush x:Key="LeagueButtonTextColorDisabled" Color="#5c5b57"/>
    <!--#endregion-->

    <!--#region Text Brushes-->
    <SolidColorBrush x:Key="LeagueTextColorDefault" Color="#938f82"/>
    <SolidColorBrush x:Key="LeagueTextColorMouseOver" Color="#ede3cf"/>
    <SolidColorBrush x:Key="LeagueTextColorPressed" Color="#785a28"/>
    <SolidColorBrush x:Key="LeagueTextColorDisabled" Color="#4d4a44"/>
    <SolidColorBrush x:Key="LeagueTextColorOnline" Color="#36d987"/>
    <SolidColorBrush x:Key="LeagueTextColorInGame" Color="#0ac4df"/>
    <SolidColorBrush x:Key="LeagueTextColorBusy" Color="#b71d36"/>
    <SolidColorBrush x:Key="LeagueTextColorOffline" Color="#3b4043"/>
    <SolidColorBrush x:Key="LeagueTextColorHeader" Color="#f0e6d2"/>
    <SolidColorBrush x:Key="LeagueTextColorSubHeader" Color="#dfd6c3"/>
    <SolidColorBrush x:Key="LeagueTextColorLargeBrightDefault" Color="#e4dbc8"/>
    <SolidColorBrush x:Key="LeagueTextColorBright" Color="#f0e6d2"/>
    <!--#endregion-->

    <!--#region CheckBox Brushes-->
    <SolidColorBrush x:Key="LeagueCheckBoxBackgroundDefault" Color="#010a13"/>
    <SolidColorBrush x:Key="LeagueCheckBoxBorderDefault" Color="#785a28"/>
    <SolidColorBrush x:Key="LeagueCheckBoxTickDefault" Color="#c89b3c"/>
    <LinearGradientBrush x:Key="LeagueCheckBoxBorderMouseOver" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#785a28" Offset="0"/>
            <GradientStop Color="#a08248" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueCheckBoxBackgroundMouseOver" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#020b13" Offset="0"/>
            <GradientStop Color="#111a20" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueCheckBoxTickMouseOver" Color="#f0e6d2"/>
    <SolidColorBrush x:Key="LeagueCheckBoxBackgroundDisabled" Color="#00070d"/>
    <SolidColorBrush x:Key="LeagueCheckBoxBorderDisabled" Color="#3c2d14"/>
    <SolidColorBrush x:Key="LeagueCheckBoxTickDisabled" Color="#644d1e"/>
    <!--#endregion-->

    <!--#region RadioButton Brushes-->
    <LinearGradientBrush x:Key="LeagueRadioButtonBorderDefault" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#b18832" Offset="0"/>
            <GradientStop Color="#806229" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueRadioButtonBackgroundDefault" Color="#010a13"/>
    <SolidColorBrush x:Key="LeagueRadioButtonInnerDefault" Color="#efe6d2"/>
    <LinearGradientBrush x:Key="LeagueRadioButtonBorderMouseOver" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#e8dbc2" Offset="0"/>
            <GradientStop Color="#c69c43" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueRadioButtonBackgroundMouseOver" Color="#010a13"/>
    <SolidColorBrush x:Key="LeagueRadioButtonInnerMouseOver" Color="#efe6d2"/>
    <LinearGradientBrush x:Key="LeagueRadioButtonBorderPressed" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#433515" Offset="0"/>
            <GradientStop Color="#604922" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueRadioButtonBackgroundPressed" Color="#010a13"/>
    <SolidColorBrush x:Key="LeagueRadioButtonInnerPressed" Color="#59441d"/>
    <SolidColorBrush x:Key="LeagueRadioButtonBorderDisabled" Color="#3c3732"/>
    <SolidColorBrush x:Key="LeagueRadioButtonBackgroundDisabled" Color="#000305"/>
    <SolidColorBrush x:Key="LeagueRadioButtonInnerDisabled" Color="#3c3732"/>
    <!--#endregion-->

    <!--#region GroupBox Brushes-->
    <SolidColorBrush x:Key="LeagueGroupBoxBorder" Color="#1e282d"/>
    <SolidColorBrush x:Key="LeagueGroupBoxBorderAccent" Color="#785a28"/>
    <SolidColorBrush x:Key="LeagueGroupBoxHeaderAccent" Color="#a09b8c"/>
    <!--#endregion-->

    <!--#region TextBox Brushes-->
    <SolidColorBrush x:Key="LeagueTextBoxBorderDefault" Color="#785a28"/>
    <SolidColorBrush x:Key="LeagueTextBoxBorderInnerDefault" Color="#000204"/>
    <SolidColorBrush x:Key="LeagueTextBoxBackgroundDefault" Color="#000306"/>
    <LinearGradientBrush x:Key="LeagueTextBoxBorderMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#7a5c2a" Offset="0"/>
            <GradientStop Color="#c7a96d" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueTextBoxBackgroundMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#060f19" Offset="0"/>
            <GradientStop Color="#161e25" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueTextBoxBorderReadOnly" Color="#414443"/>
    <!--#endregion-->

    <!--#region ComboBox Brushes-->
    <LinearGradientBrush x:Key="LeagueComboBoxBorderDefault" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#c4a461" Offset="0"/>
            <GradientStop Color="#6e5a26" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueComboBoxBackgroundDefault" Color="#0f171d"/>
    <SolidColorBrush x:Key="LeagueComboBoxArrowsDefault" Color="#c8aa6e"/>
    <LinearGradientBrush x:Key="LeagueComboBoxBorderMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#f0e5d0" Offset="0"/>
            <GradientStop Color="#c99d3f" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueComboBoxBackgroundMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#0f171d" Offset="0"/>
            <GradientStop Color="#2c2e2a" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueComboBoxArrowsMouseOver" Color="#c8aa6e"/>
    <SolidColorBrush x:Key="LeagueComboBoxBorderPressed" Color="#463714"/>
    <SolidColorBrush x:Key="LeagueComboBoxBackgroundPressed" Color="#0f171d"/>
    <SolidColorBrush x:Key="LeagueComboBoxArrowsPressed" Color="#785a28"/>
    <SolidColorBrush x:Key="LeagueComboBoxBorderDisabled" Color="#3c3c3d"/>
    <SolidColorBrush x:Key="LeagueComboBoxBackgroundDisabled" Color="#212223"/>
    <SolidColorBrush x:Key="LeagueComboBoxArrowsDisabled" Color="#3c3c3d"/>

    <SolidColorBrush x:Key="LeagueComboBoxPopupBackground" Color="#010a13"/>
    <!--#endregion-->

    <!--#region ComboBoxItem Brushes-->
    <SolidColorBrush x:Key="LeagueComboBoxItemBorder" Color="#1f2123"/>
    <SolidColorBrush x:Key="LeagueComboBoxItemBackgroundMouseOver" Color="#1e2328"/>
    <SolidColorBrush x:Key="LeagueComboBoxItemBackgroundPressed" Color="#0f171d"/>
    <SolidColorBrush x:Key="LeagueComboBoxItemForegroundDefault" Color="#bfb288"/>
    <SolidColorBrush x:Key="LeagueComboBoxItemForegroundMouseOver" Color="#e6ddca"/>
    <SolidColorBrush x:Key="LeagueComboBoxItemForegroundPressed" Color="#3b3116"/>
    <!--#endregion-->

    <!--#region Slider Brushes-->
    <LinearGradientBrush x:Key="LeagueSliderTrackForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#473814" Offset="0"/>
            <GradientStop Color="#695625" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueSliderTrackBackgroundDefault" Color="#1e2328"/>
    <LinearGradientBrush x:Key="LeagueSliderHandleForegroundDefault" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#b38d41" Offset="0"/>
            <GradientStop Color="#6e5328" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueSliderHandleBackgroundDefault" Color="#1b2026"/>
    <LinearGradientBrush x:Key="LeagueSliderTrackForegroundMouseOver" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#795b29" Offset="0"/>
            <GradientStop Color="#c8aa6e" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueSliderHandleForegroundMouseOver" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#eee2cc" Offset="0"/>
            <GradientStop Color="#c99e42" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueSliderHandleBackgroundMouseOver" Color="#2a2d2d"/>
    <LinearGradientBrush x:Key="LeagueSliderTrackForegroundPressed" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#795b29" Offset="0"/>
            <GradientStop Color="#c8aa6e" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueSliderHandleForegroundPressed" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#473814" Offset="0"/>
            <GradientStop Color="#694f23" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueSliderHandleBackgroundPressed" Color="#2a2d2d"/>
    <LinearGradientBrush x:Key="LeagueSliderTrackForegroundDisabled" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#1a1f25" Offset="0"/>
            <GradientStop Color="#1a1f25" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeagueSliderHandleForegroundDisabled" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#5c5b57" Offset="0"/>
            <GradientStop Color="#5c5b57" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueSliderHandleBackgroundDisabled" Color="#1c2227"/>
    <!--#endregion-->

    <!--#region TabControl Brushes-->
    <LinearGradientBrush x:Key="LeagueTabItemBorderDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="Transparent" Offset="0"/>
            <GradientStop Color="#c2b58b" Offset="0.5"/>
            <GradientStop Color="Transparent" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="LeagueTabItemTextDefault" Color="#c6b78d"/>
    <SolidColorBrush x:Key="LeagueTabItemTextSelected" Color="#e4dbc8"/>
    <SolidColorBrush x:Key="LeagueTabItemTextDisabled" Color="#4d4a44"/>
    <!--#endregion-->

    <!--#region ScrollBars Brushes-->
    <SolidColorBrush x:Key="LeagueScrollBarDefault" Color="#785a28"/>
    <SolidColorBrush x:Key="LeagueScrollBarMouseOver" Color="#c8aa6e"/>
    <SolidColorBrush x:Key="LeagueScrollBarPressed" Color="#463714"/>
    <SolidColorBrush x:Key="LeagueScrollBarDisabled" Color="#3c3c3d"/>
    <!--#endregion-->

    <!--#region Expander Brushes-->
    <SolidColorBrush x:Key="LeagueExpanderArrowDefault" Color="#a09b8c"/>
    <SolidColorBrush x:Key="LeagueExpanderArrowMouseOver" Color="#f0e6d2"/>
    <SolidColorBrush x:Key="LeagueExpanderArrowPressed" Color="#cdbe91"/>
    <SolidColorBrush x:Key="LeagueExpanderArrowDisabled" Color="#5c5b57"/>
    <SolidColorBrush x:Key="LeagueExpanderHeaderForegroundDefault" Color="#a09b8c"/>
    <SolidColorBrush x:Key="LeagueExpanderHeaderForegroundMouseOver" Color="#f0e6d2"/>
    <SolidColorBrush x:Key="LeagueExpanderHeaderForegroundPressed" Color="#cdbe91"/>
    <SolidColorBrush x:Key="LeagueExpanderHeaderForegroundDisabled" Color="#4d4a44"/>
    <SolidColorBrush x:Key="LeagueExpanderHeaderBackgroundMouseOver" Color="#192026"/>
    <Geometry x:Key="LeagueExpanderArrowPathDataExpanded">M 0 3 L 3 6 3 6 6 3 6 3 0 3</Geometry>
    <Geometry x:Key="LeagueExpanderArrowPathDataDefault">M 2 0 L 5 3 5 4 2 7 M 2 0 2 7</Geometry>
    <!--#endregion-->

    <!--#region ListBox Brushes-->
    <SolidColorBrush x:Key="LeagueListBoxItemBackgroundMouseOver" Color="#192026"/>
    <SolidColorBrush x:Key="LeagueListBoxItemForegroundDefault" Color="#a09b8c"/>
    <SolidColorBrush x:Key="LeagueListBoxItemForegroundMouseOver" Color="#f0e6d2"/>
    <SolidColorBrush x:Key="LeagueListBoxItemForegroundPressed" Color="#cdbe91"/>
    <SolidColorBrush x:Key="LeagueListBoxItemForegroundDisabled" Color="#4d4a44"/>
    <!--#endregion-->

    <!--#region Hyperlink-->
    <SolidColorBrush x:Key="LeagueHyperlinkDefault" Color="#0590a4"/>
    <SolidColorBrush x:Key="LeagueHyperlinkMouseOver" Color="#c5f0f1"/>
    <SolidColorBrush x:Key="LeagueHyperlinkPressed" Color="#c5f0f1"/>
    <SolidColorBrush x:Key="LeagueHyperlinkDisabled" Color="#4d4a44"/>
    <!--#endregion-->

    <!--#region ProgressBar Brushes-->
    <SolidColorBrush x:Key="LeagueProgressBarBackgroundDefault" Color="#1e282d"/>
    <SolidColorBrush x:Key="LeagueProgressBarBorderInnerDefault" Color="#010a13"/>
    <SolidColorBrush x:Key="LeagueProgressBarBorderDefault" Color="#3c3c41"/>
    <LinearGradientBrush x:Key="LeagueProgressBarForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#005b82" Offset="0"/>
            <GradientStop Color="#b2d9db" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LeagueProgressBarGreenForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#072d21" Offset="0"/>
            <GradientStop Color="#1fb356" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LeagueProgressBarPurpleForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#282043" Offset="0"/>
            <GradientStop Color="#bd74fe" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LeagueProgressBarLightBlueForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#083140" Offset="0"/>
            <GradientStop Color="#22c5ee" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LeagueProgressBarRedForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#350f10" Offset="0"/>
            <GradientStop Color="#fd1f03" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LeagueProgressBarDarkPurpleForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#311342" Offset="0"/>
            <GradientStop Color="#ee34fc" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LeagueProgressBarYellowForegroundDefault" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#362e13" Offset="0"/>
            <GradientStop Color="#fdb611" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <!--#endregion-->

    <Style TargetType="Window" x:Key="LeagueWindowStyle">
        <Style.Setters>
            <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
            <Setter Property="Background" Value="{StaticResource LeagueWindowBackground}"/>
            <Setter Property="FontFamily" Value="{StaticResource SpiegelRegular}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Control">
        <Style.Setters>
            <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
            <Setter Property="Background" Value="{StaticResource LeagueWindowBackground}"/>
            <Setter Property="FontFamily" Value="{StaticResource SpiegelRegular}"/>
        </Style.Setters>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" BorderBrush="{StaticResource LeagueButtonBorderDefault}" BorderThickness="1">
                        <Border x:Name="ButtonBorderInner" BorderBrush="#040d15" Background="{StaticResource LeagueButtonBackgroundDefault}" BorderThickness="1">
                            <ContentControl x:Name="ButtonContent" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource LeagueButtonBorderMouseOver}"/>
                            <Setter TargetName="ButtonBorderInner" Property="BorderBrush" Value="{StaticResource LeagueButtonBackgroundMouseOver}"/>
                            <Setter TargetName="ButtonBorderInner" Property="Background" Value="{StaticResource LeagueButtonBackgroundMouseOver}"/>
                            <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#463817"/>
                            <Setter TargetName="ButtonBorderInner" Property="BorderBrush" Value="#040d15"/>
                            <Setter TargetName="ButtonBorderInner" Property="Background" Value="{StaticResource LeagueButtonBackgroundDefault}"/>
                            <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource LeagueButtonBorderDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorDefault}"/>
        <Setter Property="FontFamily" Value="{StaticResource SpiegelRegular}"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="FontSize" Value="8pt"/>
    </Style>

    <Style x:Key="LeagueButtonThickBorder" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder" BorderBrush="{StaticResource LeagueButtonBorderDefault}" BorderThickness="2">
                        <Border x:Name="ButtonBorderInner" BorderBrush="#040d15" Background="{StaticResource LeagueButtonBackgroundDefault}" BorderThickness="1">
                            <ContentControl x:Name="ButtonContent" Content="{TemplateBinding Content}" FontFamily="{StaticResource BeaufortForLOL}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource LeagueButtonBorderMouseOver}"/>
                            <Setter TargetName="ButtonBorderInner" Property="BorderBrush" Value="{StaticResource LeagueButtonBackgroundMouseOver}"/>
                            <Setter TargetName="ButtonBorderInner" Property="Background" Value="{StaticResource LeagueButtonBackgroundMouseOver}"/>
                            <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorMouseOver}"/>
                            <Setter TargetName="ButtonBorder" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#eee4d0" ShadowDepth="0" Opacity="1" BlurRadius="10"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#463817"/>
                            <Setter TargetName="ButtonBorderInner" Property="BorderBrush" Value="#040d15"/>
                            <Setter TargetName="ButtonBorderInner" Property="Background" Value="{StaticResource LeagueButtonBackgroundDefault}"/>
                            <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorPressed}"/>
                            <Setter TargetName="ButtonBorder" Property="Effect" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource LeagueButtonBorderDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Foreground" Value="{StaticResource LeagueButtonTextColorDefault}"/>
        <Setter Property="FontFamily" Value="{StaticResource BeaufortForLOL}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="11pt"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueAccentText">
        <Setter Property="FontFamily" Value="{StaticResource BeaufortForLOL}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
        <Setter Property="FontSize" Value="11pt"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueBrightAccentText" BasedOn="{StaticResource LeagueAccentText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorBright}"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueDefaultText">
        <Setter Property="FontFamily" Value="{StaticResource SpiegelRegular}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
        <Setter Property="FontSize" Value="8pt"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueOnlineText" BasedOn="{StaticResource LeagueDefaultText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorOnline}"/>
        <Setter Property="FontSize" Value="8pt"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueInGameText" BasedOn="{StaticResource LeagueOnlineText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorInGame}"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueBusyText" BasedOn="{StaticResource LeagueOnlineText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorBusy}"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueOfflineText" BasedOn="{StaticResource LeagueOnlineText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorOffline}"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueHeaderText" BasedOn="{StaticResource LeagueAccentText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorHeader}"/>
        <Setter Property="FontSize" Value="18pt"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueSubHeaderText" BasedOn="{StaticResource LeagueAccentText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorSubHeader}"/>
        <Setter Property="FontSize" Value="14pt"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueLargerDefaultText" BasedOn="{StaticResource LeagueDefaultText}">
        <Setter Property="FontSize" Value="10pt"/>
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="LeagueBrightLargerDefaultText" BasedOn="{StaticResource LeagueLargerDefaultText}">
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorLargeBrightDefault}"/>
        <Setter Property="FontSize" Value="10pt"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="FontFamily" Value="{StaticResource SpiegelRegular}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
        <Setter Property="FontSize" Value="8pt"/>
    </Style>

    <Style TargetType="CheckBox">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{StaticResource SpiegelSemiBold}"/>
            <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="22"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <BulletDecorator HorizontalAlignment="Left" Margin="2" Grid.Column="0">
                                <Border x:Name="CheckBoxBorder"
                                        VerticalAlignment="Center"
                                        Width="12"
                                        Height="12"
                                        Background="{StaticResource LeagueCheckBoxBackgroundDefault}"
                                        BorderThickness="1"
                                        CornerRadius="0"
                                        BorderBrush="{StaticResource LeagueCheckBoxBorderDefault}">
                                    <Path x:Name="CheckBoxTick"
                                        Width="13"
                                        Height="10"
                                        Stroke="{StaticResource LeagueCheckBoxTickDefault}"
                                        SnapsToDevicePixels="False"
                                        StrokeThickness="1.3"
                                        StrokeStartLineCap="Square"
                                        StrokeEndLineCap="Square"
                                        Data="M 3 5 L 5 7 M 5 7 L 12 0"/>
                                </Border>
                            </BulletDecorator>
                            <ContentControl x:Name="CheckBoxContent"
                                            Content="{TemplateBinding Content}"
                                            Grid.Column="1"
                                            Foreground="{StaticResource LeagueTextColorDefault}"
                                            FontFamily="{StaticResource PTSans}"
                                            FontStretch="Expanded"
                                            FontWeight="SemiBold"
                                            VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxContent" Property="Foreground" Value="{StaticResource LeagueTextColorMouseOver}"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource LeagueCheckBoxBorderMouseOver}"/>
                                <Setter TargetName="CheckBoxTick" Property="Stroke" Value="{StaticResource LeagueCheckBoxTickMouseOver}"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource LeagueCheckBoxBackgroundMouseOver}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="CheckBoxTick" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="CheckBoxTick" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckBoxContent" Property="Foreground" Value="{StaticResource LeagueTextColorDisabled}"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{StaticResource LeagueCheckBoxBorderDisabled}"/>
                                <Setter TargetName="CheckBoxTick" Property="Stroke" Value="{StaticResource LeagueCheckBoxTickDisabled}"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="{StaticResource LeagueCheckBoxBackgroundDisabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="FontFamily" Value="{StaticResource SpiegelSemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="22"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <BulletDecorator Margin="0"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Center"
                                         Width="12"
                                         Height="12">
                            <Border x:Name="RadioButtonBorder"
                                    Padding="1"
                                        Width="10"
                                        Height="10"
                                        Background="{StaticResource LeagueRadioButtonBackgroundDefault}"
                                        BorderThickness="2"
                                        CornerRadius="0"
                                        BorderBrush="{StaticResource LeagueRadioButtonBorderDefault}"
                                    RenderTransformOrigin="0.2,0">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="45" CenterX="1" CenterY="1"/>
                                </Border.RenderTransform>
                                <Border x:Name="RadioButtonInner"
                                        Background="{StaticResource LeagueRadioButtonInnerDefault}"/>
                            </Border>
                        </BulletDecorator>
                        <ContentControl Grid.Column="1" x:Name="RadioButtonContent" Content="{TemplateBinding Content}" VerticalAlignment="Center"
                                            Foreground="{StaticResource LeagueTextColorDefault}"
                                            FontFamily="{StaticResource PTSans}"
                                            FontStretch="Expanded"
                                            FontWeight="SemiBold"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RadioButtonBorder" Property="BorderBrush" Value="{StaticResource LeagueRadioButtonBorderMouseOver}"/>
                            <Setter TargetName="RadioButtonContent" Property="Foreground" Value="{StaticResource LeagueTextColorMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RadioButtonBorder" Property="BorderBrush" Value="{StaticResource LeagueRadioButtonBorderPressed}"/>
                            <Setter TargetName="RadioButtonContent" Property="Foreground" Value="{StaticResource LeagueTextColorMouseOver}"/>
                            <Setter TargetName="RadioButtonInner" Property="Background" Value="{StaticResource LeagueRadioButtonInnerPressed}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="RadioButtonInner" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="RadioButtonInner" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RadioButtonBorder" Property="BorderBrush" Value="{StaticResource LeagueRadioButtonBorderDisabled}"/>
                            <Setter TargetName="RadioButtonContent" Property="Foreground" Value="{StaticResource LeagueTextColorDisabled}"/>
                            <Setter TargetName="RadioButtonInner" Property="Background" Value="{StaticResource LeagueRadioButtonInnerDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#1e282d"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row="0" Content="{TemplateBinding Header}"/>
                        <Border Grid.Row="1" BorderBrush="{StaticResource LeagueGroupBoxBorder}" BorderThickness="0 1 0 0" Margin="0 4 0 4"/>
                        <ContentControl Grid.Row="2" Content="{TemplateBinding Content}" Padding="8"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="GroupBox" x:Key="LeagueGroupBoxAccentStyle" BasedOn="{StaticResource {x:Type GroupBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ContentControl Grid.Row="0" Content="{TemplateBinding Header}" FontFamily="{StaticResource BeaufortForLOL}" FontWeight="Bold" FontSize="10pt"/>
                        <Border Grid.Row="1" BorderBrush="{StaticResource LeagueGroupBoxBorderAccent}" BorderThickness="0 1 0 0" Margin="0 4 0 4"/>
                        <ContentControl Grid.Row="2" Content="{TemplateBinding Content}" Padding="8"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{StaticResource LeagueTextBoxBorderDefault}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource LeagueTextBoxBackgroundDefault}"/>
        <Setter Property="CaretBrush" Value="{StaticResource LeagueTextColorDefault}"/>
        <Setter Property="Foreground" Value="{StaticResource LeagueTextColorMouseOver}"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="TextBoxBorder" BorderBrush="{StaticResource LeagueTextBoxBorderDefault}" BorderThickness="1" SnapsToDevicePixels="True">
                        <Border x:Name="TextBoxBorderInner" SnapsToDevicePixels="True" Padding="4 8" BorderBrush="{StaticResource LeagueTextBoxBorderInnerDefault}">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource LeagueTextBoxBorderMouseOver}"/>
                            <Setter TargetName="TextBoxBorderInner" Property="Background" Value="{StaticResource LeagueTextBoxBackgroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource LeagueTextBoxBorderReadOnly}"/>
                            <Setter TargetName="TextBoxBorderInner" Property="Background" Value="{x:Null}"/>
                            <Setter TargetName="TextBoxBorderInner" Property="BorderBrush" Value="{x:Null}"/>
                            <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDefault}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="LeagueComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="Border" 
                Grid.ColumnSpan="2"
                CornerRadius="0"
                Background="{StaticResource LeagueComboBoxBackgroundDefault}"
                BorderBrush="{StaticResource LeagueComboBoxBorderDefault}"
                BorderThickness="1"/>
            <Path 
                Width="6"
                Height="12"
                x:Name="Arrow"
                Grid.Column="1"     
                Stroke="{StaticResource LeagueComboBoxArrowsDefault}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 3 L 2 1 M 2 1 L 4 3 M 0 8 L 2 10 M 2 10 L 4 8"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource LeagueComboBoxBorderMouseOver}"/>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LeagueComboBoxBackgroundMouseOver}"/>
                <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource LeagueComboBoxArrowsMouseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource LeagueComboBoxBorderPressed}"/>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LeagueComboBoxBackgroundPressed}"/>
                <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource LeagueComboBoxArrowsPressed}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource LeagueComboBoxBorderPressed}"/>
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LeagueComboBoxBackgroundPressed}"/>
                <Setter Property="Foreground" Value="{StaticResource LeagueTextColorPressed}"/>
                <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource LeagueComboBoxArrowsPressed}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LeagueComboBoxBackgroundDisabled}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource LeagueComboBoxBorderDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDisabled}"/>
                <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource LeagueComboBoxArrowsDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource LeagueComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>
                        <ContentControl
                            Name="ContentSite"
                            IsHitTestVisible="False" 
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="8"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid 
                                Name="DropDown"
                                SnapsToDevicePixels="True"                
                                MinWidth="{TemplateBinding ActualWidth}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="{StaticResource LeagueComboBoxPopupBackground}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource LeagueComboBoxBorderDefault}"/>
                                <ScrollViewer Margin="1" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="ContentSite" Property="Foreground" Value="{StaticResource LeagueTextColorPressed}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource LeagueTextColorDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="ItemContainerBorder" Padding="8" SnapsToDevicePixels="True" BorderBrush="{StaticResource LeagueComboBoxItemBorder}" BorderThickness="0 1 0 0">
                        <ContentControl x:Name="ItemContainerHost" Content="{TemplateBinding Content}" Foreground="{StaticResource LeagueComboBoxItemForegroundDefault}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ItemContainerBorder" Property="Background" Value="{StaticResource LeagueComboBoxItemBackgroundMouseOver}"/>
                            <Setter TargetName="ItemContainerHost" Property="Foreground" Value="{StaticResource LeagueComboBoxItemForegroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ItemContainerBorder" Property="Background" Value="{StaticResource LeagueComboBoxItemBackgroundMouseOver}"/>
                            <Setter TargetName="ItemContainerHost" Property="Foreground" Value="{StaticResource LeagueComboBoxItemForegroundMouseOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="SliderForeground" Margin="0 0 3 0" SnapsToDevicePixels="True" Background="{StaticResource LeagueSliderTrackForegroundDefault}"  BorderThickness="1" BorderBrush="{StaticResource LeagueSliderTrackForegroundDefault}" Height="3"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SliderForeground" Property="Background" Value="{StaticResource LeagueSliderTrackForegroundDisabled}"/>
                            <Setter TargetName="SliderForeground" Property="BorderBrush" Value="{StaticResource LeagueSliderTrackForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <StackPanel Orientation="Vertical" Width="24" Height="24">
                        <Path x:Name="SliderHandlePart1" Width="24" Height="24" Stroke="{StaticResource LeagueSliderHandleForegroundDefault}" Fill="{StaticResource LeagueSliderHandleBackgroundDefault}" StrokeThickness="2.5" SnapsToDevicePixels="True"
                                  Data="M 11.5 2.5 21 12 11 22 1 12 L 11 2" StrokeStartLineCap="Square" StrokeEndLineCap="Square"/>
                        <Path x:Name="SliderHandlePart2" Width="24" Height="24" Margin="0 -24 0 0" Stroke="{StaticResource LeagueSliderHandleForegroundDefault}" StrokeStartLineCap="Square" StrokeEndLineCap="Square" StrokeThickness="1.5"
                                  Data="M 8 5 15 12 8 19 M 14 5 7 12 14 19"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SliderHandlePart1" Property="Stroke" Value="{StaticResource LeagueSliderHandleForegroundMouseOver}"/>
                            <Setter TargetName="SliderHandlePart2" Property="Stroke" Value="{StaticResource LeagueSliderHandleForegroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="SliderHandlePart1" Property="Stroke" Value="{StaticResource LeagueSliderHandleForegroundPressed}"/>
                            <Setter TargetName="SliderHandlePart2" Property="Stroke" Value="{StaticResource LeagueSliderHandleForegroundPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="SliderHandlePart1" Property="Stroke" Value="{StaticResource LeagueSliderHandleForegroundDisabled}"/>
                            <Setter TargetName="SliderHandlePart2" Property="Stroke" Value="{StaticResource LeagueSliderHandleForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="Slider" TargetType="Slider">
        <Grid>
            <Border x:Name="TrackBackground" VerticalAlignment="Center" Margin="0" BorderBrush="{StaticResource LeagueSliderTrackBackgroundDefault}" Background="{StaticResource LeagueSliderTrackBackgroundDefault}" Height="3" BorderThickness="1"/>
            <Track Grid.Row="1" x:Name="PART_Track" Margin="0"  >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}" Margin="0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="TrackBackground" Property="BorderBrush" Value="{StaticResource LeagueSliderTrackBackgroundDefault}"/>
                <Setter TargetName="TrackBackground" Property="Background" Value="{StaticResource LeagueSliderTrackBackgroundDefault}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Padding" Value="8 40 8 8"/>
    </Style>
    <Style TargetType="TabItem">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="TabBorder" BorderBrush="{StaticResource LeagueTabItemBorderDefault}" BorderThickness="0 0 0 1" Padding="10 5">
                        <ContentControl x:Name="HeaderContentHost" Content="{TemplateBinding Header}" FontSize="11pt" FontWeight="Bold" FontFamily="{StaticResource BeaufortForLOL}" Foreground="{StaticResource LeagueTabItemTextSelected}" Height="16" MinWidth="24" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="HeaderContentHost" Property="Foreground" Value="{StaticResource LeagueTabItemTextDefault}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderContentHost" Property="Foreground" Value="{StaticResource LeagueTabItemTextSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="HeaderContentHost" Property="Foreground" Value="{StaticResource LeagueTabItemTextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Width="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumbHor" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Height="6" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Track
            Name="PART_Track"
            IsDirectionReversed="true">
            <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
                <Thumb
                    x:Name="ScrollBarThumb"
                    Style="{StaticResource ScrollBarThumb}"
                    Width="5"
                    Margin="1,0,1,0"
                    Background="{StaticResource LeagueScrollBarDefault}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
            </Track.IncreaseRepeatButton>
        </Track>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ScrollBarThumb" Property="Background" Value="{StaticResource LeagueScrollBarMouseOver}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ScrollBarThumb" Property="Background" Value="{StaticResource LeagueScrollBarDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Track
            Name="PART_Track"
            IsDirectionReversed="False">
            <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
                <Thumb
                    x:Name="ScrollBarThumb"
                    Style="{StaticResource ScrollBarThumbHor}"
                    Height="5"
                    Margin="0,1,0,1"
                    Background="{StaticResource LeagueScrollBarDefault}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
            </Track.IncreaseRepeatButton>
        </Track>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ScrollBarThumb" Property="Background" Value="{StaticResource LeagueScrollBarMouseOver}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ScrollBarThumb" Property="Background" Value="{StaticResource LeagueScrollBarDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="16" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="16" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Margin="0 4 0 4"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="4 0 4 0"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border>
                        <DockPanel>
                            <ToggleButton x:Name="ExpanderButton" DockPanel.Dock="Top" 
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Background="Transparent"
                                          HorizontalContentAlignment="Left" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          VerticalContentAlignment="Center">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Grid Height="24" x:Name="ExpanderHeaderContainer">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="16"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Path Height="8" Width="8" Grid.Column="0" x:Name="Arrow" Margin="6 0 0 0"
                                                              Stroke="{StaticResource LeagueExpanderArrowDefault}"
                                                              StrokeThickness="1" SnapsToDevicePixels="True"
                                                              Fill="{StaticResource LeagueExpanderArrowDefault}"
                                                              Data="{StaticResource LeagueExpanderArrowPathDataDefault}"/>
                                                        <ContentControl Grid.Column="1" VerticalAlignment="Center" 
                                                                        x:Name="ExpanderHeader" Margin="6 0 0 0"
                                                                        HorizontalAlignment="Stretch" 
                                                                        Content="{TemplateBinding Content}"
                                                                        Foreground="{StaticResource LeagueExpanderHeaderForegroundDefault}"
                                                                        FontFamily="{StaticResource BeaufortForLOL}" FontWeight="Bold"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="Arrow" Property="Data" Value="{StaticResource LeagueExpanderArrowPathDataExpanded}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource LeagueExpanderArrowMouseOver}"/>
                                                            <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource LeagueExpanderArrowMouseOver}"/>
                                                            <Setter TargetName="ExpanderHeader" Property="Foreground" Value="{StaticResource LeagueExpanderHeaderForegroundMouseOver}"/>
                                                            <Setter TargetName="ExpanderHeaderContainer" Property="Background" Value="{StaticResource LeagueExpanderHeaderBackgroundMouseOver}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource LeagueExpanderArrowPressed}"/>
                                                            <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource LeagueExpanderArrowPressed}"/>
                                                            <Setter TargetName="ExpanderHeader" Property="Foreground" Value="{StaticResource LeagueExpanderHeaderForegroundPressed}"/>
                                                            <Setter TargetName="ExpanderHeaderContainer" Property="Background" Value="{StaticResource LeagueExpanderHeaderBackgroundMouseOver}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource LeagueExpanderArrowDisabled}"/>
                                                            <Setter TargetName="Arrow" Property="Stroke" Value="{StaticResource LeagueExpanderArrowDisabled}"/>
                                                            <Setter TargetName="ExpanderHeader" Property="Foreground" Value="{StaticResource LeagueExpanderHeaderForegroundDisabled}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ContentPresenter x:Name="ExpanderContent" DockPanel.Dock="Bottom" 
                                              Content="{TemplateBinding Content}" 
                                              Visibility="Collapsed" 
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpanderContent" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundDefault}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer>
                        <StackPanel IsItemsHost="True"/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBoxItem">
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="ListBoxItemBorder" Padding="{TemplateBinding Padding}">
                        <ContentControl x:Name="ListBoxItemContent" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ListBoxItemBorder" Property="Background" Value="{StaticResource LeagueListBoxItemBackgroundMouseOver}"/>
                            <Setter TargetName="ListBoxItemContent" Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ListBoxItemBorder" Property="Background" Value="{StaticResource LeagueListBoxItemBackgroundMouseOver}"/>
                            <Setter TargetName="ListBoxItemContent" Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundDefault}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ListBoxItemBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="ListBoxItemContent" Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundDefault}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ScrollViewer>
                        <ItemsPresenter/>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="ListViewItemBorder" Padding="{TemplateBinding Padding}">
                        <ContentControl x:Name="ListViewItemContent" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="{StaticResource LeagueListBoxItemBackgroundMouseOver}"/>
                            <Setter TargetName="ListViewItemContent" Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="{StaticResource LeagueListBoxItemBackgroundMouseOver}"/>
                            <Setter TargetName="ListViewItemContent" Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundDefault}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="Transparent"/>
                            <Setter TargetName="ListViewItemContent" Property="Foreground" Value="{StaticResource LeagueListBoxItemForegroundDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{StaticResource LeagueHyperlinkDefault}"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource LeagueHyperlinkMouseOver}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource LeagueHyperlinkDisabled}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource LeagueProgressBarBorderDefault}" BorderThickness="1">
                        <Border x:Name="PART_Track" Height="19" BorderBrush="{StaticResource LeagueProgressBarBorderInnerDefault}" BorderThickness="1" Background="{StaticResource LeagueProgressBarBackgroundDefault}">
                            <Border x:Name="PART_Indicator" Background="{StaticResource LeagueProgressBarForegroundDefault}" HorizontalAlignment="Left"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeagueGreenProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource LeagueProgressBarBorderDefault}" BorderThickness="1">
                        <Border x:Name="PART_Track" Height="19" BorderBrush="{StaticResource LeagueProgressBarBorderInnerDefault}" BorderThickness="1" Background="{StaticResource LeagueProgressBarBackgroundDefault}">
                            <Border x:Name="PART_Indicator" Background="{StaticResource LeagueProgressBarGreenForegroundDefault}" HorizontalAlignment="Left"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeaguePurpleProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource LeagueProgressBarBorderDefault}" BorderThickness="1">
                        <Border x:Name="PART_Track" Height="19" BorderBrush="{StaticResource LeagueProgressBarBorderInnerDefault}" BorderThickness="1" Background="{StaticResource LeagueProgressBarBackgroundDefault}">
                            <Border x:Name="PART_Indicator" Background="{StaticResource LeagueProgressBarPurpleForegroundDefault}" HorizontalAlignment="Left"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeagueLightBlueProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource LeagueProgressBarBorderDefault}" BorderThickness="1">
                        <Border x:Name="PART_Track" Height="19" BorderBrush="{StaticResource LeagueProgressBarBorderInnerDefault}" BorderThickness="1" Background="{StaticResource LeagueProgressBarBackgroundDefault}">
                            <Border x:Name="PART_Indicator" Background="{StaticResource LeagueProgressBarLightBlueForegroundDefault}" HorizontalAlignment="Left"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeagueRedProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource LeagueProgressBarBorderDefault}" BorderThickness="1">
                        <Border x:Name="PART_Track" Height="19" BorderBrush="{StaticResource LeagueProgressBarBorderInnerDefault}" BorderThickness="1" Background="{StaticResource LeagueProgressBarBackgroundDefault}">
                            <Border x:Name="PART_Indicator" Background="{StaticResource LeagueProgressBarRedForegroundDefault}" HorizontalAlignment="Left"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeagueDarkPurpleProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource LeagueProgressBarBorderDefault}" BorderThickness="1">
                        <Border x:Name="PART_Track" Height="19" BorderBrush="{StaticResource LeagueProgressBarBorderInnerDefault}" BorderThickness="1" Background="{StaticResource LeagueProgressBarBackgroundDefault}">
                            <Border x:Name="PART_Indicator" Background="{StaticResource LeagueProgressBarDarkPurpleForegroundDefault}" HorizontalAlignment="Left"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeagueYellowProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{StaticResource LeagueProgressBarBorderDefault}" BorderThickness="1">
                        <Border x:Name="PART_Track" Height="19" BorderBrush="{StaticResource LeagueProgressBarBorderInnerDefault}" BorderThickness="1" Background="{StaticResource LeagueProgressBarBackgroundDefault}">
                            <Border x:Name="PART_Indicator" Background="{StaticResource LeagueProgressBarYellowForegroundDefault}" HorizontalAlignment="Left"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
